<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[PPTP VPN服务器优化（Ubuntu Server）]]></title>
      <url>http://yoursite.com/2016/10/27/PPTPVPN/</url>
      <content type="text"><![CDATA[相信很多小伙伴都有搭建VPN服务器的经历，在搭建的时候我们会遇到很多问题，经过不懈努力，总算是搭建好了服务器，但日常的使用中我们又该怎么进行维护呢？这又是一个头疼的问题，接下来是我本人搭建PPTP VPN服务器时的一些经验供大家参考。 基础篇建立监控日志 搭建好的服务器别忘了配置用户登录和登出监控日志，这样有助于我们及时发现问题以此来解决问题，防患未然。这里主要针对是OS为Ubuntu 14.0的PPTP服务器的优化方式，其他Linux操作系统不保证方法通用哟使用cd命令分别进入到ppp目录下： cd /etc/ppp/ 接下来使用如下命令：sudo vim ip-up编辑ip-up文件在末尾处添加： # log echo &quot;login &quot;$PEERNAME&quot; `date -d today +%F_%T`&quot; &quot;$6&quot; &quot;$5&quot; &gt;&gt; /var/log/pptpd.log 意思是以 login 用户名 日期 时间 这样的格式记录在路径为/var/log/的pptpd.log文件里。 同样使用命令：sudo vim ip-down编辑ip-down文件在最后添加： # log echo &quot;logout &quot;$PEERNAME&quot; `date -d today +%F_%T`&quot; &quot;$6&quot; &quot;$5&quot; &gt;&gt; /var/log/pptpd.log 所表达的意义和上面类似，这样就可以在/var/log/路径下pptpd.log文件里查看用户登录登出VPN的记录了。 限制单一账号同时登录数 通俗地讲就是一个账号同时只能一个终端拨入VPN，这个功能相信很多管理员都是必配的，防止终端泛滥。在/etc/ppp/ip-up 文件中加入如下脚本,其中，if [ $NUMLOGINS -gt 1 ]代表最大登录数 # Max login per user sleep 2 PID=$(cat /var/run/$PPP_IFACE.pid) if [ $PID ] then PROCCESS=&quot;$(last | grep ppp | grep still | grep $PPP_IFACE)&quot; NAME=$(echo $PROCCESS |cut -d&apos; &apos; -f1) NUMLOGINS=&quot;$(last | grep ppp | grep still | grep -c $NAME&apos; &apos;)&quot; if [ $NUMLOGINS -gt 1 ] then kill $PID fi fi 此时一个账号就同时只能一个终端使用啦，当然修改上面的数字1可以DIY你的单账号登录数~ 进阶篇####根据日期生成详细用户使用日志 基础篇中的用户日志还是比较泛泛的，有时候并不能起到预期的效果比如查看每个用户在线时间，使用流量等等，况且监控信息记录在以年log日志里，时间久了查看起来十分不便，所以，接下来的工作我们将这些元素通通加入到监控的列表中，并且会每天生成一封监控报表。 分别在/etc/ppp/ip-up和/etc/ppp/ip-down文件最底部加入如下脚本: sudo mkdir /var/log/pptpdlog #生成路径 sudo vim /etc/ppp/ip-up LOG_DIR=&quot;/var/log/pptpdlog&quot; #定义日志存放路径 curDay=`date +&quot;%Y%m%d&quot;` #定义日期的格式 logFile=&quot;${LOG_DIR}/pptpd${curDay}.log&quot; #定义每日生成的日志名称 echo &quot;##################################&quot; &gt;&gt; $logFile echo &quot;Now User $PEERNAME is connected!!!&quot; &gt;&gt; $logFile echo &quot;##################################&quot; &gt;&gt; $logFile echo &quot;time: `date -d today +%F_%T`&quot; &gt;&gt; $logFile echo &quot;clientIP: $6&quot; &gt;&gt; $logFile echo &quot;username: $PEERNAME&quot; &gt;&gt; $logFile echo &quot;device: $1&quot; &gt;&gt; $logFile echo &quot;vpnIP: $4&quot; &gt;&gt; $logFile echo &quot;assignIP: $5&quot; &gt;&gt; $logFile sudo vim /etc/ppp/ip-down LOG_DIR=&quot;/var/log/pptpdlog&quot; curDay=`date +&quot;%Y%m%d&quot;` logFile=&quot;${LOG_DIR}/pptpd${curDay}.log&quot; echo &quot;#####################################&quot; &gt;&gt; $logFile echo &quot;Now User $PEERNAME is disconnected!!!&quot; &gt;&gt; $logFile echo &quot;#####################################&quot; &gt;&gt; $logFile echo &quot;time: `date -d today +%F_%T`&quot; &gt;&gt; $logFile echo &quot;clientIP: $6&quot; &gt;&gt; $logFile echo &quot;username: $PEERNAME&quot; &gt;&gt; $logFile echo &quot;device: $1&quot; &gt;&gt; $logFile echo &quot;vpnIP: $4&quot; &gt;&gt; $logFile echo &quot;assignIP: $5&quot; &gt;&gt; $logFile echo &quot;connect time: $CONNECT_TIME s&quot; &gt;&gt; $logFile echo &quot;bytes sent: $BYTES_SENT B&quot; &gt;&gt; $logFile echo &quot;bytes rcvd: $BYTES_RCVD B&quot; &gt;&gt; $logFile sum_bytes=$(($BYTES_SENT+$BYTES_RCVD)) sum=`echo &quot;scale=2;$sum_bytes/1024/1024&quot;|bc` echo &quot;bytes sum: $sum MB&quot; &gt;&gt; $logFile ave=`echo &quot;scale=2;$sum_bytes/1024/$CONNECT_TIME&quot;|bc` echo &quot;average speed: $ave KB/s&quot; &gt;&gt; $logFile 此时在 /var/log/pptpdlog 目录下能看到文件名为pptp20160909类似的log日志。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[日常の分享]]></title>
      <url>http://yoursite.com/2016/10/15/share20161005/</url>
      <content type="text"><![CDATA[大家好，又到了分享时间，这次分享的是近期B站上很火的一段舞蹈视频，这段舞蹈出自霓虹歌手水桥舞（美依礼芽）和她的好闺蜜们，舞蹈BGM为：極楽浄土（gokurakujodo） 视频出自Youtube 第二首同样也出自美依礼芽，曲名：MIRAI（日文名：未来），视频同样出自Youtube，为原版歌曲MV じゃ enjoy！ 【みうめ・メイリア・217】極楽浄土[Gokuraku Jodo] OFFiCiALvar dplayer0 = new DPlayer({"element":document.getElementById("dplayer0"),"autoplay":false,"theme":"#FADFA3","loop":false,"video":{"url":"http://ofp0bxnjc.bkt.clouddn.com/%E3%80%90%E3%81%BF%E3%81%86%E3%82%81%E3%83%BB%E3%83%A1%E3%82%A4%E3%83%AA%E3%82%A2%E3%83%BB217%E3%80%91%E6%A5%B5%E6%A5%BD%E6%B5%84%E5%9C%9F%5BGokuraku%20Jodo%5D%20%20OFFiCiAL.mp4","pic":"http://i2.hdslb.com/bfs/archive/35db778d523663c617f44972a7cf6dac0a5defd4.jpg"},"danmaku":{"api":"http://dplayer.daoapp.io","token":"tokendemo","addition":[" https://dplayer.daoapp.io/bilibili?aid=6445032"]}}); 【GARNiDELiA】Miraivar dplayer1 = new DPlayer({"element":document.getElementById("dplayer1"),"autoplay":false,"theme":"#FADFA3","loop":false,"video":{"url":"http://ofp0bxnjc.bkt.clouddn.com/GARNiDELiA%20-%20Mirai.mp4","pic":"http://cdn.aixifan.com/dotnet/artemis/u/cms/www/201602/22133803hys7u6vr.jpg"},"danmaku":{"api":"http://dplayer.daoapp.io","token":"tokendemo"}});]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://yoursite.com/2016/10/05/hello-world/</url>
      <content type="text"><![CDATA[欢迎来到 Hexo! 这是我的第一篇博文. 查看 documentation 来获得更多的信息. 如果在使用hexo时遇到了麻烦, 可以在这里获得答案 troubleshooting 或者可以在 GitHub上向我提问. 快速上手新建一篇博文1$ hexo new "My New Post" 更多信息: Writing 开启服务器1$ hexo server 更多信息: Server 生成静态页面1$ hexo generate 更多信息: Generating 部署在远端站点1$ hexo deploy 更多信息: Deployment]]></content>
    </entry>

    
  
  
</search>
