<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[H3C WX3010E跨三层部署实现多SSID发布]]></title>
      <url>http://senhonsakura.coding.me/zhangcyblog/2016/11/17/acwx3010e/</url>
      <content type="text"><![CDATA[本文章主要介绍了跨三层部署H3C WX3010E AC控制器和AP的配置方式和注意事项，主要的拓扑架构如下： 需求 AC和AP的注册VLAN是20，IP Subnet 192.168.20.0 AP发射两个无线信号，所属的VLAN分别为30（192.168.30.0）和31（192.168.31.0） DHCP Server为核心交换机 AC配置 首先通过192.168.0.101进入到交换板卡，默认用户名和密码是admin定义VLAN 123vlan20vlan30vlan31 进入内联口定义接口类型 123interface Bridge-Aggregation1 port link-type trunk port trunk permit vlan all 注：内联口下绑定的是G1/0/11和G1/0/12，这两个口在物理设备上是看不到的，但是他是连接AC板卡的桥梁，内联口没有正常工作会影响到AC板卡的工作。定义默认路由 1ip route-static 0.0.0.0 0.0.0.0 192.168.20.1(网关) 其次通过192.168.0.100进入到AC板卡，默认用户名和密码也是admin定义VLAN 123VLAN20VLAN30VLAN31 定义内联口类型 123interface Bridge-Aggregation1 port link-type trunk port trunk permit vlan all 定义无线接口 12345678910111213141516interface WLAN-ESS0 port link-type hybrid undo port hybrid vlan 1 port hybrid vlan 30 untagged port hybrid pvid vlan 30 port-security port-mode psk port-security tx-key-type 11key port-security preshared-key pass-phrase 123@abcd(自定义密码)interface WLAN-ESS1 port link-type hybrid undo port hybrid vlan 1 port hybrid vlan 31 untagged port hybrid pvid vlan 31 port-security port-mode psk port-security tx-key-type 11key port-security preshared-key pass-phrase 432@qwe(自定义密码) 定义无线服务模板 1234567891011121314wlan service-template 1 crypto ssid 1 #定义无线信号的名称 bind WLAN-ESS 0 #绑定相应的无线接口 cipher-suite tkip security-ie rsn security-ie wpa service-template enablewlan service-template 1 crypto ssid 2 #定义无线信号的名称 bind WLAN-ESS 1 #绑定相应的无线接口 cipher-suite tkip security-ie rsn security-ie wpa service-template enable 定义AP参数 123456wlan ap ap01(自定义名称) model WA2110-GN id 1 serial-id XXXXXXXX #AP的序列号 radio 1 #根据不通的需求启用radio，我这款不支持双频，故之启用了radio 1 service-template 1 service-template 2 radio enable 添加路由 1ip route-static 0.0.0.0 0.0.0.0 192.168.20.1(网关) 核心交换机配置 前提是三层设备能正常访问外网，这里我用的是H3C S5500三层交换机，同厂商不同设备配置方式大同小异。划分VLAN123VLAN20VLAN30VLAN31 定义接口类型12345678910111213interface Vlan-interface20 #定义三层接口 ip address 192.168.20.1 255.255.255.0interface Vlan-interface30 ip address 192.168.30.1 255.255.255.0interface Vlan-interface31 ip address 192.168.31.1 255.255.255.0interface GigabitEthernet1/0/4 #此接口与AP相连 port link-type trunk port trunk permit vlan all port trunk pvid vlan 21interface GigabitEthernet1/0/14 #此接口与AC相连 port link-type trunk port trunk permit vlan all 启用DHCP123456789101112dhcp server ip-pool vlan20 network 192.168.20.0 mask 255.255.255.0 gateway-list 192.168.20.1 dns-list 221.6.4.66 114.114.114.114dhcp server ip-pool vlan30 network 192.168.30.0 mask 255.255.255.0 gateway-list 192.168.30.1 dns-list 221.6.4.66 114.114.114.114dhcp server ip-pool vlan31 network 192.168.31.0 mask 255.255.255.0 gateway-list 192.168.31.1 dns-list 221.6.4.66 114.114.114.114 Trouble shouting 通过display wlan ap 命令用来显示指定AP或所有AP的信息 通过display wlan ap address 命令用来显示指定AP或全部AP的地址信息 通过display wlan ap connection record 命令用来显示AP的连接记录 通过reset wlan ap connection record 清楚记录 通过display wlan client 命令用来查看指定无线客户端或者所有无线客户端的信息 通过display arp all 命令来查看AC板卡是否有去往三层设备的arp有什么疑问或不对的地方希望各位大大在下面留言指正，感谢~]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Cisco路由器L2L VPN和云端互联实现无拨号翻墙]]></title>
      <url>http://senhonsakura.coding.me/zhangcyblog/2016/11/06/Cisco-Router/</url>
      <content type="text"><![CDATA[主要介绍一下Cisco路由器如何配置IPSec VPN和云端软件防火墙实现VPN通信，从而达到在内网无需拨号即可访问国外网站，不同版本间配置方式可能可能会有所不同，但知道了原理后基本上也都是大同小异，ジア 行きましょう 配置telnet登陆密码12345conf tenable password "password" //配置enable密码line vty 0 4password "password" //配置telnet登陆密码login 配置snmp1234snmp-server community crm //crm为自定义的共同体名称，常用Publicsnmp-server trap-source FastEthernet0/3/0 //定义那个端口可被监控，一般可不写snmp-server host x.x.x.x crm //在哪台终端（公网地址x.x.x.x）上应用上述定义的共同体snmp-server enable traps //启用snmp 配置基于ipsec的site to site VPN 此配置的目的在于内网地址能够将所有流量丢到对端通过对端访问Internet，以下是Cisco1800路由器上的配置，VPN对端采用的是Linux Ubuntu的Openswan做IPSec路由器123456789101112131415crypto isakmp policy 1 encr 3des hash md5 authentication pre-share group 2crypto isakmp key 123@abcd（自定义密钥） address 对端公网地址 定义共享密钥crypto ipsec security-association lifetime seconds 28800crypto ipsec transform-set test（自定义名称） esp-3des esp-md5-hmac 定义IPSec的转换集crypto map ebt（自定义名称） 1 ipsec-isakmp set peer 对端公网 set transform-set test match address 100 调用相应的ACL列表access-list 100 permit ip 内网感兴趣流 反掩码 any ACL列表定义感兴趣流最后记得在外网口敲上 crypto map ebt 来调用加密图 接下来是Linux端的配置（Linux为云上的虚机），需要用到openswan这个软件，这里我才用的是Ubuntu 14.0系统，在Ubuntu的源里面就有openswan，直接通过apt-get install openswan即可安装,假如安装遇到问题的小伙伴可以在下面留言区给我留言。安装完毕后即可进入配置文件配置IPSec文件。 编辑ipsec.conf文件vim /etc/ipsec.conf修改如下参数： 1234567891011121314151617protostack=auto to protostack=netkey#添加如下内容：(conn要顶格，下面的参数不能顶格)conn TEST authby=secret auto=start ike=3des-md5;modp1024! aggrmode=no salifetime=8h keyexchang=ike esp=3des-md5 type=tunnel left=x.x.x.x #注意：假如是AWS，此处填内网地址，假如是阿里云，此处填公网地址 leftsubent=0.0.0.0/0 right=对端公网地址 rightsubnet=对端内网地址 修改IPSec.secrets文件vim /etc/ipsec.secrets,首先把最后一句include注释掉,再添加： 123leftip rightip： PSK "123@abcd"（自定义密钥）例如：47.90.108.113 151.29.114.195：PSK "123@abcd" 开启路由转发，禁用ICMP重定向编辑sysctl.conf文件：vim /etc/sysctl.conf添加如下内容 123net.ipv4.ip_forward = 1net.ipv4.conf.all.accept_redirects = 0net.ipv4.conf.all.send_redirects = 0 设置iptables并开机自动加载编辑rc.local文件vim /etc/rc.local并在exit 0前面添加如下内容： 12345678iptables --table nat --append POSTROUTING --jump MASQUERADEiptables -A FORWARD -p tcp --syn -s 0.0.0.0/0 -j TCPMSS --set-mss 1365上面一条是定义MTU值，由于数据包经过VPN加密后长度会改变，所以需要修改MTU值，否则有影响到正常的网页访问，一般设在1300-1500之间for each in /proc/sys/net/ipv4/conf/*do echo 0 &gt; $each/accept_redirects echo 0 &gt; $each/send_redirectsdone Trouble shooting在云端服务器上通过：service ipsec status可查看VPN隧道是否建立。通过：ipsec verify可以查看云端ipsec服务是否正常启动（不能有failed）在路由器上通过：show crypto isakmap sa可查看ipsec第一阶段协商是否通过，状态为QM则协商通过通过：show crypto ipsec sa可查看第二阶段协商是否通过，转换集是否生效，数据是否有加解密]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[PPTP VPN服务器优化（Ubuntu Server）]]></title>
      <url>http://senhonsakura.coding.me/zhangcyblog/2016/10/27/PPTPVPN/</url>
      <content type="text"><![CDATA[相信很多小伙伴都有搭建VPN服务器的经历，在搭建的时候我们会遇到很多问题，经过不懈努力，总算是搭建好了服务器，但日常的使用中我们又该怎么进行维护呢？这又是一个头疼的问题，接下来是我本人搭建PPTP VPN服务器时的一些经验供大家参考。 建立监控日志 搭建好的服务器别忘了配置用户登录和登出监控日志，这样有助于我们及时发现问题以此来解决问题，防患未然。这里主要针对是OS为Ubuntu 14.0的PPTP服务器的优化方式，其他Linux操作系统不保证方法通用哟使用cd命令分别进入到ppp目录下： 1cd /etc/ppp/ 接下来使用如下命令：sudo vim ip-up编辑ip-up文件在末尾处添加： 12# logecho &quot;login &quot;$PEERNAME&quot; `date -d today +%F_%T`&quot; &quot;$6&quot; &quot;$5&quot; &gt;&gt; /var/log/pptpd.log 意思是以 login 用户名 日期 时间 这样的格式记录在路径为/var/log/的pptpd.log文件里。 同样使用命令：sudo vim ip-down编辑ip-down文件在最后添加： 12# logecho "logout "$PEERNAME" `date -d today +%F_%T`" "$6" "$5" &gt;&gt; /var/log/pptpd.log 所表达的意义和上面类似，这样就可以在/var/log/路径下pptpd.log文件里查看用户登录登出VPN的记录了。 限制单一账号同时登录数 通俗地讲就是一个账号同时只能一个终端拨入VPN，这个功能相信很多管理员都是必配的，防止终端泛滥。在/etc/ppp/ip-up 文件中加入如下脚本,其中，if [ $NUMLOGINS -gt 1 ]代表最大登录数 12345678910111213# Max login per user sleep 2 PID=$(cat /var/run/$PPP_IFACE.pid) if [ $PID ] then PROCCESS="$(last | grep ppp | grep still | grep $PPP_IFACE)" NAME=$(echo $PROCCESS |cut -d' ' -f1) NUMLOGINS="$(last | grep ppp | grep still | grep -c $NAME' ')" if [ $NUMLOGINS -gt 1 ] then kill $PID fi fi 此时一个账号就同时只能一个终端使用啦，当然修改上面的数字1可以DIY你的单账号登录数 根据日期每天生成监控日志 基础篇中的用户日志还是比较泛泛的，有时候并不能起到预期的效果比如查看每个用户在线时间，使用流量等等，况且监控信息记录在以年log日志里，时间久了查看起来十分不便，所以，接下来的工作我们将这些元素通通加入到监控的列表中，并且会每天生成一封监控报表。 分别在/etc/ppp/ip-up和/etc/ppp/ip-down文件最底部加入如下脚本: 12sudo mkdir /var/log/pptpdlog #生成路径sudo vim /etc/ppp/ip-up 12345678910111213LOG_DIR="/var/log/pptpdlog" #定义日志存放路径curDay=`date +"%Y%m%d"` #定义日期的格式logFile="$&#123;LOG_DIR&#125;/pptpd$&#123;curDay&#125;.log" #定义每日生成的日志名称echo "##################################" &gt;&gt; $logFileecho "Now User $PEERNAME is connected!!!" &gt;&gt; $logFileecho "##################################" &gt;&gt; $logFileecho "time: `date -d today +%F_%T`" &gt;&gt; $logFileecho "clientIP: $6" &gt;&gt; $logFileecho "username: $PEERNAME" &gt;&gt; $logFileecho "device: $1" &gt;&gt; $logFileecho "vpnIP: $4" &gt;&gt; $logFileecho "assignIP: $5" &gt;&gt; $logFile sudo vim /etc/ppp/ip-down 123456789101112131415161718192021LOG_DIR="/var/log/pptpdlog"curDay=`date +"%Y%m%d"`logFile="$&#123;LOG_DIR&#125;/pptpd$&#123;curDay&#125;.log"echo "#####################################" &gt;&gt; $logFileecho "Now User $PEERNAME is disconnected!!!" &gt;&gt; $logFileecho "#####################################" &gt;&gt; $logFile echo "time: `date -d today +%F_%T`" &gt;&gt; $logFile echo "clientIP: $6" &gt;&gt; $logFileecho "username: $PEERNAME" &gt;&gt; $logFileecho "device: $1" &gt;&gt; $logFile echo "vpnIP: $4" &gt;&gt; $logFileecho "assignIP: $5" &gt;&gt; $logFileecho "connect time: $CONNECT_TIME s" &gt;&gt; $logFileecho "bytes sent: $BYTES_SENT B" &gt;&gt; $logFileecho "bytes rcvd: $BYTES_RCVD B" &gt;&gt; $logFilesum_bytes=$(($BYTES_SENT+$BYTES_RCVD))sum=`echo "scale=2;$sum_bytes/1024/1024"|bc`echo "bytes sum: $sum MB" &gt;&gt; $logFileave=`echo "scale=2;$sum_bytes/1024/$CONNECT_TIME"|bc`echo "average speed: $ave KB/s" &gt;&gt; $logFile 此时在 /var/log/pptpdlog 目录下能看到文件名为pptp20160909类似的log日志。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[日常の分享]]></title>
      <url>http://senhonsakura.coding.me/zhangcyblog/2016/10/15/share20161005/</url>
      <content type="text"><![CDATA[这次分享一个近期B站上很火的一段舞蹈视频，这段舞蹈出自霓虹歌手水桥舞（美依礼芽）和她的好闺蜜们，舞蹈BGM为：極楽浄土（gokurakujodo） 视频出自Youtube 第二首同样也出自美依礼芽，曲名：MIRAI（日文名：未来），视频同样出自Youtube，为原版歌曲MV じゃ enjoy！ 【みうめ・メイリア・217】極楽浄土[Gokuraku Jodo] OFFiCiALvar dplayer0 = new DPlayer({"element":document.getElementById("dplayer0"),"autoplay":false,"theme":"#FADFA3","loop":false,"video":{"url":"http://ofp0bxnjc.bkt.clouddn.com/%E3%80%90%E3%81%BF%E3%81%86%E3%82%81%E3%83%BB%E3%83%A1%E3%82%A4%E3%83%AA%E3%82%A2%E3%83%BB217%E3%80%91%E6%A5%B5%E6%A5%BD%E6%B5%84%E5%9C%9F%5BGokuraku%20Jodo%5D%20%20OFFiCiAL.mp4","pic":"http://i2.hdslb.com/bfs/archive/35db778d523663c617f44972a7cf6dac0a5defd4.jpg"},"danmaku":{"api":"http://dplayer.daoapp.io","token":"tokendemo","addition":[" https://dplayer.daoapp.io/bilibili?aid=6445032"]}}); 【GARNiDELiA】Miraivar dplayer1 = new DPlayer({"element":document.getElementById("dplayer1"),"autoplay":false,"theme":"#FADFA3","loop":false,"video":{"url":"http://ofp0bxnjc.bkt.clouddn.com/GARNiDELiA%20-%20Mirai.mp4","pic":"http://cdn.aixifan.com/dotnet/artemis/u/cms/www/201602/22133803hys7u6vr.jpg"},"danmaku":{"api":"http://dplayer.daoapp.io","token":"tokendemo"}});]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://senhonsakura.coding.me/zhangcyblog/2016/10/05/hello-world/</url>
      <content type="text"><![CDATA[欢迎来到 Hexo! 这是我的第一篇博文. 查看 documentation 来获得更多的信息. 如果在使用hexo时遇到了麻烦, 可以在这里获得答案 troubleshooting 或者可以在 GitHub上向我提问. 快速上手新建一篇博文1$ hexo new "My New Post" 更多信息: Writing 开启服务器1$ hexo server 更多信息: Server 生成静态页面1$ hexo generate 更多信息: Generating 部署在远端站点1$ hexo deploy 更多信息: Deployment]]></content>
    </entry>

    
  
  
</search>
